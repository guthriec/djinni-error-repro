// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from local_interface.djinni

#pragma once

#include "concern_service.hpp"
#include "djinni_wasm.hpp"

namespace djinni_generated {

struct ConcernService : ::djinni::JsInterface<::ConcernService, ConcernService> {
    using CppType = std::shared_ptr<::ConcernService>;
    using CppOptType = std::shared_ptr<::ConcernService>;
    using JsType = em::val;
    using Boxed = ConcernService;

    static CppType toCpp(JsType j) { return _fromJs(j); }
    static JsType fromCppOpt(const CppOptType& c) { return {_toJs(c)}; }
    static JsType fromCpp(const CppType& c) {
        ::djinni::checkForNull(c.get(), "ConcernService::fromCpp");
        return fromCppOpt(c);
    }

    static em::val cppProxyMethods();

    static em::val create();
    static em::val get_concern(const CppType& self, int64_t w_concern_id);

};

} // namespace djinni_generated
